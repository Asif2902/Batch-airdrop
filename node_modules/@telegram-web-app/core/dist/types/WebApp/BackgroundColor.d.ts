import { HexColor, ThemeParams } from "../typings/common";
import { ValueOf } from "../typings/utils";
import { HeaderBgColor } from "../typings/WebApp";
import { EventEmitter, Disposer } from "../utils";
interface Options {
    eventEmitter: EventEmitter<BgColorEvent>;
    themeParams: () => ThemeParams;
}
type BgColorEvents = typeof BackgroundColor.EVENTS;
type BgColorEvent = ValueOf<BgColorEvents>;
type BgColorUpdateListener = (color: HexColor | undefined) => any;
export declare class BackgroundColor {
    #private;
    static get EVENTS(): {
        readonly UPDATED: "updated";
    };
    constructor({ eventEmitter, themeParams }: Options);
    on(event: BgColorEvent, listener: BgColorUpdateListener): Disposer;
    get: () => HexColor | undefined;
    update: () => void;
    set: (color: HeaderBgColor | HexColor) => void;
}
export {};
