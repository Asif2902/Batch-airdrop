var c=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var j=(r,e)=>{for(var s in e)c(r,s,{get:e[s],enumerable:!0})},w=(r,e,s,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of k(e))!q.call(r,o)&&o!==s&&c(r,o,{get:()=>e[o],enumerable:!(t=W(e,o))||t.enumerable});return r};var z=r=>w(c({},"__esModule",{value:!0}),r);var E={};j(E,{UnsupportedVersionError:()=>d,WebAppBackgroundColorInvalidError:()=>$,WebAppDataInvalidError:()=>i,WebAppHapticFeedbackTypeInvalidError:()=>p,WebAppHapticImpactStyleInvalidError:()=>x,WebAppHapticNotificationTypeInvalidError:()=>a,WebAppHeaderColorKeyInvalidError:()=>T,WebAppInlineChooseChatTypeInvalidError:()=>b,WebAppInlineModeDisabledError:()=>_,WebAppInlineQueryInvalidError:()=>h,WebAppInvoiceOpenedError:()=>l,WebAppInvoiceUrlInvalidError:()=>m,WebAppMainButtonParamInvalidError:()=>y,WebAppMethodUnsupportedError:()=>A,WebAppPopupOpenedError:()=>u,WebAppPopupParamInvalidError:()=>n,WebAppScanQrPopupOpenedError:()=>g,WebAppScanQrPopupParamInvalidError:()=>f,WebAppTelegramUrlInvalidError:()=>R});module.exports=z(E);var p=class extends Error{constructor(e){super(`[Telegram.WebApp] Haptic feedback type is invalid ${e}`)}};var x=class extends Error{constructor(e){super(`[Telegram.WebApp] Haptic impact style is invalid ${e}`)}};var a=class extends Error{constructor(e){super(`[Telegram.WebApp] Haptic notification type is invalid ${e}`)}};var l=class extends Error{constructor(){super("[Telegram.WebApp] Invoice is already opened")}};var m=class extends Error{constructor(e){super(`[Telegram.WebApp] Invoice url is invalid ${e}`)}};var u=class extends Error{constructor(){super("[Telegram.WebApp] Popup is already opened")}};var n=class extends Error{constructor(e){super(`[Telegram.WebApp] Popup ${e}`)}};var g=class extends Error{constructor(){super("[Telegram.WebApp] Popup is already opened")}};var f=class extends Error{constructor(e){super(`[Telegram.WebApp] Scan QR popup ${e}`)}};var d=class extends RangeError{constructor(e,s,t){let o=`[Telegram.WebApp] ${s} from feature ${e} is unavailable in version ${t}`;super(o)}};var $=class extends Error{constructor(e){super(`[Telegram.WebApp] Background color format is invalid ${e}`)}};var i=class extends Error{constructor(e){super(`[Telegram.WebApp] Data ${e}`)}};var T=class extends Error{constructor(e){super(`[Telegram.WebApp] Header color key should be one of Telegram.WebApp.themeParams.bg_color, Telegram.WebApp.themeParams.secondary_bg_color, 'bg_color', 'secondary_bg_color' ${e}`)}};var b=class extends Error{constructor(e){super(`[Telegram.WebApp] Choose chat ${e}`)}};var _=class extends Error{constructor(){super("[Telegram.WebApp] Inline mode is disabled for this bot. Read more about inline mode: https://core.telegram.org/bots/inline")}};var h=class extends Error{constructor(e){super(`[Telegram.WebApp] Inline query ${e}`)}};var y=class extends Error{constructor(e){super(`[Telegram.WebApp] Main button ${e}`)}};var A=class extends Error{constructor(e,s){super(`[Telegram.WebApp] Method ${e} is not supported in version ${s}`)}};var R=class extends Error{constructor(e){super(`[Telegram.WebApp] Url ${e}`)}};
